# Project Info - Qlik-MCP-server

## Overzicht
Een Model Context Protocol (MCP) server die een interface biedt naar qlik-cli voor het beheren van Qlik Cloud applicaties. Deze server stelt MCP clients in staat om Qlik apps te ontdekken, te zoeken, te bouwen, uit te pakken, te exporteren, importeren, kopiëren, publiceren en te beheren via een gestandaardiseerde interface. Ondersteunt zowel directe authenticatie als context-gebaseerde multi-tenant authenticatie met volledige app lifecycle management.

## Doelgroep
- **Ontwikkelaars**: Die Qlik apps willen integreren in hun development workflow
- **Data Analisten**: Die programmatisch Qlik apps willen beheren en ontdekken
- **DevOps Engineers**: Die Qlik deployment processen willen automatiseren
- **MCP Client Gebruikers**: Die Qlik functionaliteiten willen gebruiken via hun MCP client
- **Multi-tenant Organisaties**: Die meerdere Qlik Cloud tenants willen beheren
- **Content Managers**: Die overzicht willen over hun Qlik app portfolio
- **Migration Specialists**: Die apps willen migreren tussen omgevingen
- **Backup Administrators**: Die apps willen exporteren voor backup doeleinden

## Qlik CLI Referentie
**Zie `qlik_cli_reference.txt`** voor volledige documentatie van de qlik-cli zoals geïnstalleerd op het systeem. Dit bestand bevat:
- Alle beschikbare commando's en subcommando's
- Parameter specificaties en flags
- Context management informatie
- Voorbeelden en gebruik
- Integratie richtlijnen

Deze referentie wordt gebruikt om ervoor te zorgen dat de MCP server integratie altijd gebaseerd is op de laatste opbouw van de geïnstalleerde qlik-cli.

## Huidige Functionaliteiten

### Basis Infrastructuur
- **config.py**: Configuratie management voor Qlik CLI en MCP server instellingen
  - **Multi-context ondersteuning**: Context-gebaseerde authenticatie voor multi-tenant omgevingen
  - **Legacy ondersteuning**: Directe API key authenticatie voor eenvoudige setups
  - **Context directory management**: Configureerbare opslag locatie voor context bestanden
  - **Enhanced app unbuild configuratie**: 
    - `default_unbuild_directory`: Default locatie voor app unbuild operaties
    - `include_file_contents_in_output`: Schakelaar voor bestandsinhoud in output
    - Environment variable ondersteuning: `QLIK_DEFAULT_UNBUILD_DIRECTORY`, `QLIK_INCLUDE_FILE_CONTENTS`
  - **QVF Export Directory Management**: 
    - `qvf_export_directory`: Configureerbare locatie voor QVF export operaties
    - Environment variable ondersteuning: `QLIK_QVF_EXPORT_DIRECTORY`
    - Automatische directory aanmaak en validatie
    - Schrijfrechten verificatie en error handling
- **.env-example**: Uitgebreide configuratie template voor gebruikers
  - **Georganiseerde configuratie categorieën**: Qlik CLI, authenticatie, context management, app management, server configuratie
  - **Duidelijke documentatie**: Elke configuratie optie heeft uitgebreide beschrijving en voorbeelden
  - **QVF Export configuratie**: Specifieke sectie voor QVF export directory configuratie
  - **Configuratie voorbeelden**: Verschillende scenario's (context-based, direct auth, development setup)
  - **Best practices**: Aanbevelingen voor productie en development omgevingen
- **requirements.txt**: Dependency management met FastMCP en andere benodigde packages
- **README.md**: Uitgebreide documentatie voor installatie en gebruik met verwijzing naar .env-example
- **qlik_cli_reference.txt**: Volledige qlik-cli referentie documentatie voor integratie

### Qlik CLI Integratie
- **qlik_tools/**: Gemodulariseerde package structuur voor qlik-cli integratie
  - **qlik_cli_combined.py**: Hoofdklasse QlikCLI die alle functionaliteiten combineert
  - **qlik_tools_app_build.py**: App build en unbuild functionaliteiten
    - **app_build()**: Volledige ondersteuning voor qlik app build met alle parameters
    - **app_unbuild()**: Enhanced ondersteuning voor qlik app unbuild functionaliteit
      - **Default directory management**: Automatische directory selectie uit configuratie
      - **Directory creation**: Automatisch aanmaken van target directories
      - **File content reading**: Inlezen van alle uitgepakte bestanden
      - **Structured file organization**: Categorisatie van bestanden (script, dimensions, measures, etc.)
      - **Error handling**: Graceful handling van onleesbare bestanden
      - **Security**: Path traversal validatie en file size limits
      - **Performance**: Memory-bewust omgaan met grote bestanden
  - **qlik_tools_app_lifecycle.py**: App export, import, copy, publish functionaliteiten
  - **qlik_tools_app_discovery.py**: App discovery en search functionaliteiten
  - **qlik_tools_space_management.py**: Space management functionaliteiten
  - **qlik_tools_context_management.py**: Context management functionaliteiten
  - **qlik_cli_base.py**: Basis klasse met gemeenschappelijke functionaliteiten
  - **App Lifecycle Management**: Volledige functionaliteiten voor complete app lifecycle
    - **app_export()**: Export apps naar verschillende formaten (QVF, JSON, XLSX)
      - Ondersteuning voor export met/zonder data
      - Progress monitoring voor grote exports
      - Disk space validatie en cleanup
      - Bestandsintegriteit verificatie
    - **app_import()**: Import apps vanuit lokale bestanden
      - Pre-import validatie en bestandscontrole
      - Conflict detectie en resolutie
      - Post-import verificatie
      - Space targeting en naam management
    - **app_copy()**: Kopieer apps binnen dezelfde tenant
      - Cross-space copying ondersteuning
      - Data en permissions kopieer opties
      - Naam uniciteit validatie
      - Source app validatie
    - **app_publish()**: Publiceer apps naar managed spaces
      - Managed space validatie
      - Publication permissions check
      - Conflict resolutie voor bestaande publicaties
      - Publication status tracking
  - **App Discovery**: Functionaliteiten voor app ontdekking en beheer
    - **app_list()**: Lijst van beschikbare apps met filtering op space, owner, paginering
    - **app_get()**: Gedetailleerde informatie over specifieke app inclusief metadata
    - **app_search()**: Zoeken in apps op naam, beschrijving en tags met relevantie scoring
    - **space_list()**: Overzicht van beschikbare spaces met app counts en type informatie
  - **Context Management**: Volledige ondersteuning voor qlik context operaties
    - **context_create()**: Nieuwe context aanmaken met API key validatie
    - **context_list()**: Alle beschikbare contexts tonen met huidige actieve context
    - **context_use()**: Wisselen tussen verschillende contexts
    - **context_remove()**: Veilig verwijderen van contexts (niet actieve context)
    - **context_current()**: Informatie over huidige actieve context
    - **validate_api_key()**: API key validatie tegen Qlik Cloud tenant
  - **Validation & Security Features**:
    - Tenant URL validatie voor Qlik Cloud domains
    - API key masking in logs voor veiligheid
    - Secure credential handling
    - File path validatie tegen directory traversal attacks
    - Export format validatie
    - Space permissions verificatie
  - **JSON Parsing**: Robuuste JSON parsing voor qlik-cli output met error handling
  - **Error handling**: Robuuste foutafhandeling en parameter validatie
  - **Logging**: Uitgebreide logging voor debugging en monitoring
  - **Timeout handling**: Configureerbare timeouts voor langlopende operaties

### FastMCP Server Implementatie
- **app.py**: Hoofdbestand met werkende FastMCP server
  - **MCP Tools**: Zestien geregistreerde tools beschikbaar voor clients
    - **App Lifecycle Management**:
      - `qlik_app_export`: Export apps naar lokale bestanden voor backup/migratie
      - `qlik_app_import`: Import apps vanuit lokale bestanden naar tenant
      - `qlik_app_copy`: Kopieer bestaande apps binnen dezelfde tenant
      - `qlik_app_publish`: Publiceer apps naar managed spaces
    - **App Discovery**:
      - `qlik_app_list`: Lijst van beschikbare apps met filtering en paginering
      - `qlik_app_get`: Gedetailleerde informatie over specifieke app
      - `qlik_app_search`: Zoeken in apps op naam, beschrijving en tags
      - `qlik_space_list`: Overzicht van beschikbare spaces met app counts
    - **App Management**:
      - `qlik_app_build`: Bouw Qlik apps met alle qlik-cli parameters
      - `qlik_app_unbuild`: **ENHANCED** - Export Qlik apps naar component bestanden met:
        - **Automatic directory management**: Gebruik van default directory uit configuratie
        - **File content return**: Alle uitgepakte bestanden worden ingelezen en geretourneerd
        - **Structured output**: Georganiseerde bestandsstructuur in response
        - **File categorization**: Script, dimensions, measures, objects, variables, bookmarks, etc.
        - **Enhanced error handling**: Graceful handling van onleesbare bestanden
        - **Configuration integration**: Ondersteuning voor environment variables
        - **Recommendations**: Intelligente suggesties gebaseerd op uitgepakte content
        - **Next steps guidance**: Duidelijke vervolgstappen voor gebruikers
    - **Context Management**:
      - `qlik_context_create`: Nieuwe authenticatie context aanmaken
      - `qlik_context_list`: Alle beschikbare contexts tonen
      - `qlik_context_use`: Wisselen naar specifieke context
      - `qlik_context_remove`: Authenticatie context verwijderen
    - **Utilities**:
      - `qlik_cli_version`: Verkrijg qlik-cli versie informatie
      - `qlik_validate_connection`: Test verbinding met Qlik Cloud
  - **Pydantic Models**: Type-safe parameter validatie voor alle tools
    - **App Lifecycle Models**:
      - QlikAppExportParams: Parameters voor app export met format en data opties
      - QlikAppImportParams: Parameters voor app import met validatie en space targeting
      - QlikAppCopyParams: Parameters voor app kopiëren met data en permissions opties
      - QlikAppPublishParams: Parameters voor app publicatie naar managed spaces
    - **App Discovery Models**:
      - QlikAppListParams: Parameters voor app listing met filtering
      - QlikAppGetParams: Parameters voor specifieke app details
      - QlikAppSearchParams: Parameters voor app zoeken met filters
      - QlikSpaceListParams: Parameters voor space listing met type filtering
    - **App Management Models**:
      - QlikAppBuildParams: App build parameters
      - QlikAppUnbuildParams: App unbuild parameters (unchanged interface, enhanced functionality)
    - **Context Management Models**:
      - QlikContextCreateParams: Context aanmaak parameters
      - QlikContextUseParams: Context switching parameters
      - QlikContextRemoveParams: Context verwijdering parameters
  - **User-friendly Output**: Geformatteerde output voor betere leesbaarheid
  - **Error Handling**: Comprehensive foutafhandeling met duidelijke error messages
  - **Logging**: Gestructureerde logging naar console en bestand
  - **Server Management**: Proper startup, shutdown en configuratie validatie

## Technische Details

### Enhanced Configuration Management
- **.env-example Template**:
  - **Comprehensive Coverage**: Alle beschikbare configuratie opties gedocumenteerd
  - **Categorized Organization**: Logische groepering van configuratie opties
  - **QVF Export Configuration**: Dedicated sectie voor QVF export directory management
  - **Usage Examples**: Verschillende configuratie scenario's met voorbeelden
  - **Best Practice Guidance**: Aanbevelingen voor verschillende omgevingen
  - **Security Considerations**: Veilige configuratie van credentials en paths
- **QVF Export Directory Management**:
  - **Automatic Directory Creation**: Directory wordt automatisch aangemaakt indien niet bestaat
  - **Permission Validation**: Schrijfrechten worden gevalideerd bij configuratie
  - **Path Security**: Validatie tegen directory traversal en onveilige paths
  - **Environment Variable Support**: `QLIK_QVF_EXPORT_DIRECTORY` voor flexibele configuratie
  - **Default Value**: Standaard `./exports` directory in project root
  - **Integration**: Naadloze integratie met bestaande configuratie structuur
- **Enhanced Configuration Validation**:
  - **QVF Export Directory**: Validatie van export directory toegankelijkheid
  - **Helper Methods**: `get_qvf_export_directory()` voor directory management
  - **Error Handling**: Duidelijke foutmeldingen bij configuratie problemen
  - **Startup Validation**: Configuratie wordt gevalideerd bij server startup

### Enhanced App Unbuild Functionaliteiten
- **Default Directory Management**:
  - Automatische directory selectie uit `QLIK_DEFAULT_UNBUILD_DIRECTORY` environment variable
  - Fallback naar configuratie setting `default_unbuild_directory`
  - Expliciete directory parameter heeft altijd voorrang
  - Automatisch aanmaken van directories indien niet bestaand
  - Directory permissions validatie
- **File Content Processing**:
  - Automatisch inlezen van alle uitgepakte bestanden na unbuild
  - Categorisatie van bestanden op type (script, dimensions, measures, objects, variables, bookmarks, app_properties, connections)
  - Pattern-based file detection voor verschillende bestandstypen
  - Ondersteuning voor verschillende encodings (UTF-8, Latin-1, CP1252)
  - Binary file handling met Base64 encoding
  - File size limits (10MB) voor veiligheid
- **Structured Output**:
  - Georganiseerde bestandsstructuur in JSON response
  - File metadata (naam, pad, grootte, inhoud)
  - Error handling per bestand (onleesbare bestanden worden gerapporteerd)
  - Summary informatie (aantal bestanden per categorie)
  - Configuration informatie over gebruikte settings
- **Enhanced User Experience**:
  - Intelligente recommendations gebaseerd op uitgepakte content
  - Next steps guidance voor vervolgacties
  - Clear indication of used directory (default vs explicit)
  - File summary met counts per categorie
  - Configuration transparency (welke settings werden gebruikt)
- **Security & Performance**:
  - Path traversal validatie voor veiligheid
  - File size limits om memory issues te voorkomen
  - Graceful error handling voor onleesbare bestanden
  - Cleanup bij gedeeltelijke failures
  - Memory-efficient file processing

### MCP Server Functionaliteiten
- **FastMCP Framework**: Moderne, snelle MCP server implementatie
- **Tool Registration**: Automatische registratie van Qlik tools voor MCP clients
- **Parameter Validation**: Pydantic models voor type-safe parameter handling
- **Async Support**: Volledige ondersteuning voor asynchrone operaties
- **Configuration Integration**: Naadloze integratie met config.py instellingen

### App Lifecycle Management Functionaliteiten
- **Export Capabilities**:
  - Multiple format support: QVF, JSON, XLSX
  - Data inclusion options: with data, without data, metadata only
  - Progress monitoring voor grote bestanden
  - Disk space validatie en cleanup
  - File integrity verificatie
- **Import Capabilities**:
  - QVF bestand import met validatie
  - Pre-import bestandscontrole (grootte, format, integriteit)
  - Conflict detectie en naam resolutie
  - Space targeting en permissions check
  - Post-import verificatie
- **Copy Operations**:
  - Cross-space copying binnen dezelfde tenant
  - Data inclusion/exclusion opties
  - Permissions copying ondersteuning
  - Source app validatie en target space verificatie
  - Naam uniciteit controle
- **Publication Management**:
  - Managed space targeting en validatie
  - Publication permissions verificatie
  - Existing publication conflict handling
  - Publication status tracking en verificatie

### App Discovery & Search Functionaliteiten
- **App Listing**: Paginering, filtering op space/owner, sorteer opties
- **App Details**: Volledige metadata inclusief reload status, file size, permissions
- **Search Capabilities**: Fuzzy matching, relevantie scoring, multi-field search
- **Space Management**: Type filtering (personal/shared/managed), app counts
- **Performance Optimization**: Efficiënte handling van grote app catalogi
- **Client-side Filtering**: Geavanceerde zoek- en filtermogelijkheden

### Context Management & Authentication
- **Multi-tenant Support**: Beheer van meerdere Qlik Cloud tenants via contexts
- **Secure Credential Storage**: API keys worden veilig opgeslagen via qlik-cli
- **Context Switching**: Eenvoudig wisselen tussen verschillende omgevingen
- **API Key Validation**: Validatie van credentials voordat context wordt aangemaakt
- **Tenant URL Validation**: Controle op geldige Qlik Cloud domain patterns
- **Active Context Protection**: Voorkomt verwijdering van actieve context

### Qlik App Build Ondersteuning
- Basis parameters: app identifier
- Script en data: script files, no-data, no-reload, row limits
- Resources: connections (yml), dimensions, measures, objects, variables, bookmarks (json)
- App properties: json configuratie bestanden
- Opties: no-save, silent mode

### Enhanced Qlik App Unbuild Ondersteuning  
- **Backward Compatible**: Bestaande interface blijft ongewijzigd
- **Enhanced Directory Management**:
  - Default directory uit environment variable (`QLIK_DEFAULT_UNBUILD_DIRECTORY`)
  - Automatisch directory aanmaken indien niet bestaand
  - Directory permissions validatie
  - Expliciete directory parameter heeft voorrang
- **File Content Integration**:
  - Alle uitgepakte bestanden worden automatisch ingelezen
  - Gestructureerde categorisatie van bestandstypen
  - Robuuste encoding detection en error handling
  - File size limits voor veiligheid
- **Enhanced Output**:
  - Structured file contents in response
  - File summary met counts per categorie
  - Intelligent recommendations gebaseerd op content
  - Configuration transparency
  - Next steps guidance
- **Configuration Options**:
  - `include_file_contents_in_output`: Schakelaar voor bestandsinhoud (default: true)
  - Environment variable ondersteuning
  - Configureerbare default directories

### Error Handling & Logging
- Subprocess timeout management
- Qlik CLI error parsing en doorsturen
- Parameter validatie vooraf
- Uitgebreide logging van alle operaties
- Sensitive data masking in logs
- Log files voor debugging en monitoring
- Configureerbare log levels
- JSON parsing error handling

## Architectuur
- **MCP Protocol**: Standaard Model Context Protocol implementatie
- **FastMCP**: Framework voor snelle MCP server ontwikkeling
- **Subprocess**: Interface naar qlik-cli executable
- **Pydantic**: Type-safe configuratie en parameter management
- **Logging**: Gestructureerde logging voor monitoring
- **Qlik CLI Integration**: Gebaseerd op volledige qlik-cli referentie (zie qlik_cli_reference.txt)
- **Context Management**: Integratie met qlik-cli context systeem voor multi-tenant ondersteuning
- **JSON Processing**: Robuuste parsing van qlik-cli JSON output
- **Modular Design**: Georganiseerde package structuur voor maintainability

## Gebruik

### Server Starten
De server kan gestart worden met:
```bash
python app.py
```

### Configuration Setup
Voor eenvoudige configuratie:
```bash
# Kopieer .env-example naar .env
cp .env-example .env

# Bewerk .env met je specifieke instellingen
# Het bestand bevat uitgebreide documentatie en voorbeelden
```

### Enhanced App Unbuild Workflows

#### Basis Unbuild (ongewijzigd)
```
qlik_app_unbuild(app="MyApp", dir="/path/to/export")
```

#### Enhanced Unbuild met Default Directory
```
# Configureer environment variable
export QLIK_DEFAULT_UNBUILD_DIRECTORY="/default/unbuild/path"

# Unbuild gebruikt automatisch default directory
qlik_app_unbuild(app="MyApp")
```

#### Enhanced Output met File Contents
```json
{
  "success": true,
  "message": "Successfully unbuilt Qlik app: MyApp",
  "app": "MyApp",
  "unbuild_summary": {
    "app_name": "MyApp",
    "target_directory": "/default/unbuild/path",
    "used_default_directory": true,
    "files_extracted": 15,
    "no_data_mode": false
  },
  "file_summary": {
    "script_files": 1,
    "dimension_files": 3,
    "measure_files": 5,
    "object_files": 4,
    "variable_files": 2,
    "bookmark_files": 0,
    "app_properties_files": 1,
    "connection_files": 1,
    "other_files": 0
  },
  "file_contents": {
    "script": {
      "filename": "script.qvs",
      "path": "script.qvs",
      "size": 2048,
      "content": "LOAD * FROM [lib://DataFiles/sales.xlsx];"
    },
    "dimensions": [
      {
        "filename": "dimension_1.json",
        "path": "dimensions/dimension_1.json",
        "size": 512,
        "content": "{\"qInfo\":{\"qType\":\"dimension\"},...}"
      }
    ],
    "measures": [...],
    "objects": [...],
    "variables": [...],
    "app_properties": {...},
    "connections": {...}
  },
  "recommendations": [
    "Review the extracted script file for data loading logic",
    "Examine dimensions and measures for business logic",
    "Check object definitions for visualization configurations",
    "Update connection settings for target environment"
  ],
  "configuration_info": {
    "default_unbuild_directory_configured": true,
    "default_directory": "/default/unbuild/path",
    "file_contents_enabled": true,
    "qvf_export_directory": "./exports"
  },
  "next_steps": [
    "Verify all expected files have been extracted to the target directory",
    "Review file contents for any environment-specific configurations",
    "Consider organizing extracted files in version control system",
    "Use extracted components for app migration or backup purposes"
  ]
}
```

### App Lifecycle Management Workflows

#### App Export Workflow
1. **App exporteren voor backup**:
   ```
   qlik_app_export(app_identifier="MyApp", output_path="/backup/MyApp.qvf", format="qvf", include_data=true)
   ```

2. **App exporteren zonder data**:
   ```
   qlik_app_export(app_identifier="MyApp", output_path="/templates/MyApp_template.qvf", no_data=true)
   ```

3. **App exporteren naar JSON**:
   ```
   qlik_app_export(app_identifier="MyApp", output_path="/exports/MyApp.json", format="json")
   ```

#### App Import Workflow
1. **App importeren vanuit backup**:
   ```
   qlik_app_import(file_path="/backup/MyApp.qvf", app_name="MyApp_Restored", space_id="space-123")
   ```

2. **App importeren met conflict handling**:
   ```
   qlik_app_import(file_path="/templates/Template.qvf", app_name="NewApp", replace_existing=true)
   ```

#### App Copy Workflow
1. **App kopiëren naar andere space**:
   ```
   qlik_app_copy(source_app_id="app-123", target_name="MyApp_Copy", target_space_id="space-456", include_data=true)
   ```

2. **Template maken zonder data**:
   ```
   qlik_app_copy(source_app_id="app-123", target_name="MyApp_Template", include_data=false)
   ```

#### App Publish Workflow
1. **App publiceren naar managed space**:
   ```
   qlik_app_publish(app_id="app-123", target_space_id="managed-space-789", publish_name="Production App")
   ```

2. **Bestaande publicatie vervangen**:
   ```
   qlik_app_publish(app_id="app-123", target_space_id="managed-space-789", replace_existing=true)
   ```

### App Discovery Workflow
1. **Apps ontdekken**:
   ```
   qlik_app_list(limit=20, space_id="space-123")
   ```

2. **Apps zoeken**:
   ```
   qlik_app_search(query="sales", limit=10, owner="john.doe")
   ```

3. **App details bekijken**:
   ```
   qlik_app_get(app_identifier="MyApp")
   ```

4. **Spaces verkennen**:
   ```
   qlik_space_list(type_filter="shared")
   ```

### Context Management Workflow
1. **Context aanmaken**:
   ```
   qlik_context_create(name="prod", tenant_url="https://your-tenant.qlikcloud.com", api_key="your-api-key")
   ```

2. **Contexts bekijken**:
   ```
   qlik_context_list()
   ```

3. **Context activeren**:
   ```
   qlik_context_use(name="prod")
   ```

4. **Apps beheren** (gebruikt actieve context):
   ```
   qlik_app_build(app="MyApp", script="script.qvs")
   ```

### Beschikbare MCP Tools
MCP clients kunnen verbinding maken en de volgende tools gebruiken:

**App Lifecycle Management:**
- `qlik_app_export`: Voor het exporteren van apps naar lokale bestanden
- `qlik_app_import`: Voor het importeren van apps vanuit lokale bestanden
- `qlik_app_copy`: Voor het kopiëren van apps binnen dezelfde tenant
- `qlik_app_publish`: Voor het publiceren van apps naar managed spaces

**App Discovery:**
- `qlik_app_list`: Voor het ontdekken van beschikbare apps met filtering
- `qlik_app_get`: Voor gedetailleerde informatie over specifieke apps
- `qlik_app_search`: Voor het zoeken in apps op naam, beschrijving en tags
- `qlik_space_list`: Voor overzicht van beschikbare spaces

**App Management:**
- `qlik_app_build`: Voor het bouwen van Qlik applicaties
- `qlik_app_unbuild`: **ENHANCED** - Voor het exporteren van Qlik applicaties met file content return

**Context Management:**
- `qlik_context_create`: Nieuwe authenticatie context aanmaken
- `qlik_context_list`: Beschikbare contexts tonen
- `qlik_context_use`: Context activeren
- `qlik_context_remove`: Context verwijderen

**Utilities:**
- `qlik_cli_version`: Voor versie informatie
- `qlik_validate_connection`: Voor connectie validatie

## Volgende Stappen
1. **Reload Management**: App reload triggering en monitoring
2. **Content Management**: Advanced space en collection management
3. **Connection Management**: Data connection beheer en validatie
4. **Testing**: Unit tests en integratie tests
5. **Documentatie**: Uitgebreide gebruikershandleiding
6. **Advanced Features**: App analysis tools, performance monitoring, en andere geavanceerde qlik-cli functionaliteiten
7. **Batch Operations**: Bulk export/import/copy operaties voor efficiency
8. **Scheduling**: Automated backup en sync workflows