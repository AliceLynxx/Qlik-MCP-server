# Project Info - Qlik-MCP-server

## Overzicht
Een Model Context Protocol (MCP) server die een interface biedt naar qlik-cli voor het beheren van Qlik Cloud applicaties. Deze server stelt MCP clients in staat om Qlik apps te ontdekken, te zoeken, te bouwen, uit te pakken, te exporteren, importeren, kopiëren, publiceren en te beheren via een gestandaardiseerde interface. Ondersteunt zowel directe authenticatie als context-gebaseerde multi-tenant authenticatie met volledige app lifecycle management.

## Doelgroep
- **Ontwikkelaars**: Die Qlik apps willen integreren in hun development workflow
- **Data Analisten**: Die programmatisch Qlik apps willen beheren en ontdekken
- **DevOps Engineers**: Die Qlik deployment processen willen automatiseren
- **MCP Client Gebruikers**: Die Qlik functionaliteiten willen gebruiken via hun MCP client
- **Multi-tenant Organisaties**: Die meerdere Qlik Cloud tenants willen beheren
- **Content Managers**: Die overzicht willen over hun Qlik app portfolio
- **Migration Specialists**: Die apps willen migreren tussen omgevingen
- **Backup Administrators**: Die apps willen exporteren voor backup doeleinden

## Qlik CLI Referentie
**Zie `qlik_cli_reference.txt`** voor volledige documentatie van de qlik-cli zoals geïnstalleerd op het systeem. Dit bestand bevat:
- Alle beschikbare commando's en subcommando's
- Parameter specificaties en flags
- Context management informatie
- Voorbeelden en gebruik
- Integratie richtlijnen

Deze referentie wordt gebruikt om ervoor te zorgen dat de MCP server integratie altijd gebaseerd is op de laatste opbouw van de geïnstalleerde qlik-cli.

## Huidige Functionaliteiten

### Basis Infrastructuur
- **config.py**: Configuratie management voor Qlik CLI en MCP server instellingen
  - **Multi-context ondersteuning**: Context-gebaseerde authenticatie voor multi-tenant omgevingen
  - **Legacy ondersteuning**: Directe API key authenticatie voor eenvoudige setups
  - **Context directory management**: Configureerbare opslag locatie voor context bestanden
- **requirements.txt**: Dependency management met FastMCP en andere benodigde packages
- **README.md**: Uitgebreide documentatie voor installatie en gebruik
- **qlik_cli_reference.txt**: Volledige qlik-cli referentie documentatie voor integratie

### Qlik CLI Integratie
- **qlik_tools.py**: Kern module met QlikCLI klasse voor qlik-cli integratie
  - **QlikCLI klasse**: Python interface naar qlik-cli commando's
  - **App Management**:
    - **app_build()**: Volledige ondersteuning voor qlik app build met alle parameters
    - **app_unbuild()**: Ondersteuning voor qlik app unbuild functionaliteit
  - **App Lifecycle Management**: Nieuwe functionaliteiten voor complete app lifecycle
    - **app_export()**: Export apps naar verschillende formaten (QVF, JSON, XLSX)
      - Ondersteuning voor export met/zonder data
      - Progress monitoring voor grote exports
      - Disk space validatie en cleanup
      - Bestandsintegriteit verificatie
    - **app_import()**: Import apps vanuit lokale bestanden
      - Pre-import validatie en bestandscontrole
      - Conflict detectie en resolutie
      - Post-import verificatie
      - Space targeting en naam management
    - **app_copy()**: Kopieer apps binnen dezelfde tenant
      - Cross-space copying ondersteuning
      - Data en permissions kopieer opties
      - Naam uniciteit validatie
      - Source app validatie
    - **app_publish()**: Publiceer apps naar managed spaces
      - Managed space validatie
      - Publication permissions check
      - Conflict resolutie voor bestaande publicaties
      - Publication status tracking
  - **App Discovery**: Functionaliteiten voor app ontdekking en beheer
    - **app_list()**: Lijst van beschikbare apps met filtering op space, owner, paginering
    - **app_get()**: Gedetailleerde informatie over specifieke app inclusief metadata
    - **app_search()**: Zoeken in apps op naam, beschrijving en tags met relevantie scoring
    - **space_list()**: Overzicht van beschikbare spaces met app counts en type informatie
  - **Context Management**: Volledige ondersteuning voor qlik context operaties
    - **context_create()**: Nieuwe context aanmaken met API key validatie
    - **context_list()**: Alle beschikbare contexts tonen met huidige actieve context
    - **context_use()**: Wisselen tussen verschillende contexts
    - **context_remove()**: Veilig verwijderen van contexts (niet actieve context)
    - **context_current()**: Informatie over huidige actieve context
    - **validate_api_key()**: API key validatie tegen Qlik Cloud tenant
  - **Validation & Security Features**:
    - Tenant URL validatie voor Qlik Cloud domains
    - API key masking in logs voor veiligheid
    - Secure credential handling
    - File path validatie tegen directory traversal attacks
    - Export format validatie
    - Space permissions verificatie
  - **JSON Parsing**: Robuuste JSON parsing voor qlik-cli output met error handling
  - **Error handling**: Robuuste foutafhandeling en parameter validatie
  - **Logging**: Uitgebreide logging voor debugging en monitoring
  - **Timeout handling**: Configureerbare timeouts voor langlopende operaties

### FastMCP Server Implementatie
- **app.py**: Hoofdbestand met werkende FastMCP server
  - **MCP Tools**: Zestien geregistreerde tools beschikbaar voor clients
    - **App Lifecycle Management**:
      - `qlik_app_export`: Export apps naar lokale bestanden voor backup/migratie
      - `qlik_app_import`: Import apps vanuit lokale bestanden naar tenant
      - `qlik_app_copy`: Kopieer bestaande apps binnen dezelfde tenant
      - `qlik_app_publish`: Publiceer apps naar managed spaces
    - **App Discovery**:
      - `qlik_app_list`: Lijst van beschikbare apps met filtering en paginering
      - `qlik_app_get`: Gedetailleerde informatie over specifieke app
      - `qlik_app_search`: Zoeken in apps op naam, beschrijving en tags
      - `qlik_space_list`: Overzicht van beschikbare spaces met app counts
    - **App Management**:
      - `qlik_app_build`: Bouw Qlik apps met alle qlik-cli parameters
      - `qlik_app_unbuild`: Export Qlik apps naar component bestanden
    - **Context Management**:
      - `qlik_context_create`: Nieuwe authenticatie context aanmaken
      - `qlik_context_list`: Alle beschikbare contexts tonen
      - `qlik_context_use`: Wisselen naar specifieke context
      - `qlik_context_remove`: Authenticatie context verwijderen
    - **Utilities**:
      - `qlik_cli_version`: Verkrijg qlik-cli versie informatie
      - `qlik_validate_connection`: Test verbinding met Qlik Cloud
  - **Pydantic Models**: Type-safe parameter validatie voor alle tools
    - **App Lifecycle Models**:
      - QlikAppExportParams: Parameters voor app export met format en data opties
      - QlikAppImportParams: Parameters voor app import met validatie en space targeting
      - QlikAppCopyParams: Parameters voor app kopiëren met data en permissions opties
      - QlikAppPublishParams: Parameters voor app publicatie naar managed spaces
    - **App Discovery Models**:
      - QlikAppListParams: Parameters voor app listing met filtering
      - QlikAppGetParams: Parameters voor specifieke app details
      - QlikAppSearchParams: Parameters voor app zoeken met filters
      - QlikSpaceListParams: Parameters voor space listing met type filtering
    - **App Management Models**:
      - QlikAppBuildParams: App build parameters
      - QlikAppUnbuildParams: App unbuild parameters
    - **Context Management Models**:
      - QlikContextCreateParams: Context aanmaak parameters
      - QlikContextUseParams: Context switching parameters
      - QlikContextRemoveParams: Context verwijdering parameters
  - **User-friendly Output**: Geformatteerde output voor betere leesbaarheid
  - **Error Handling**: Comprehensive foutafhandeling met duidelijke error messages
  - **Logging**: Gestructureerde logging naar console en bestand
  - **Server Management**: Proper startup, shutdown en configuratie validatie

## Technische Details

### MCP Server Functionaliteiten
- **FastMCP Framework**: Moderne, snelle MCP server implementatie
- **Tool Registration**: Automatische registratie van Qlik tools voor MCP clients
- **Parameter Validation**: Pydantic models voor type-safe parameter handling
- **Async Support**: Volledige ondersteuning voor asynchrone operaties
- **Configuration Integration**: Naadloze integratie met config.py instellingen

### App Lifecycle Management Functionaliteiten
- **Export Capabilities**:
  - Multiple format support: QVF, JSON, XLSX
  - Data inclusion options: with data, without data, metadata only
  - Progress monitoring voor grote bestanden
  - Disk space validatie en cleanup
  - File integrity verificatie
- **Import Capabilities**:
  - QVF bestand import met validatie
  - Pre-import bestandscontrole (grootte, format, integriteit)
  - Conflict detectie en naam resolutie
  - Space targeting en permissions check
  - Post-import verificatie
- **Copy Operations**:
  - Cross-space copying binnen dezelfde tenant
  - Data inclusion/exclusion opties
  - Permissions copying ondersteuning
  - Source app validatie en target space verificatie
  - Naam uniciteit controle
- **Publication Management**:
  - Managed space targeting en validatie
  - Publication permissions verificatie
  - Existing publication conflict handling
  - Publication status tracking en verificatie

### App Discovery & Search Functionaliteiten
- **App Listing**: Paginering, filtering op space/owner, sorteer opties
- **App Details**: Volledige metadata inclusief reload status, file size, permissions
- **Search Capabilities**: Fuzzy matching, relevantie scoring, multi-field search
- **Space Management**: Type filtering (personal/shared/managed), app counts
- **Performance Optimization**: Efficiënte handling van grote app catalogi
- **Client-side Filtering**: Geavanceerde zoek- en filtermogelijkheden

### Context Management & Authentication
- **Multi-tenant Support**: Beheer van meerdere Qlik Cloud tenants via contexts
- **Secure Credential Storage**: API keys worden veilig opgeslagen via qlik-cli
- **Context Switching**: Eenvoudig wisselen tussen verschillende omgevingen
- **API Key Validation**: Validatie van credentials voordat context wordt aangemaakt
- **Tenant URL Validation**: Controle op geldige Qlik Cloud domain patterns
- **Active Context Protection**: Voorkomt verwijdering van actieve context

### Qlik App Build Ondersteuning
- Basis parameters: app identifier
- Script en data: script files, no-data, no-reload, row limits
- Resources: connections (yml), dimensions, measures, objects, variables, bookmarks (json)
- App properties: json configuratie bestanden
- Opties: no-save, silent mode

### Qlik App Unbuild Ondersteuning  
- App export naar directory structuur
- Configureerbare export directory
- No-data optie voor apps zonder data
- Automatische generatie van config.yml

### Error Handling & Logging
- Subprocess timeout management
- Qlik CLI error parsing en doorsturen
- Parameter validatie vooraf
- Uitgebreide logging van alle operaties
- Sensitive data masking in logs
- Log files voor debugging en monitoring
- Configureerbare log levels
- JSON parsing error handling

## Architectuur
- **MCP Protocol**: Standaard Model Context Protocol implementatie
- **FastMCP**: Framework voor snelle MCP server ontwikkeling
- **Subprocess**: Interface naar qlik-cli executable
- **Pydantic**: Type-safe configuratie en parameter management
- **Logging**: Gestructureerde logging voor monitoring
- **Qlik CLI Integration**: Gebaseerd op volledige qlik-cli referentie (zie qlik_cli_reference.txt)
- **Context Management**: Integratie met qlik-cli context systeem voor multi-tenant ondersteuning
- **JSON Processing**: Robuuste parsing van qlik-cli JSON output

## Gebruik

### Server Starten
De server kan gestart worden met:
```bash
python app.py
```

### App Lifecycle Management Workflows

#### App Export Workflow
1. **App exporteren voor backup**:
   ```
   qlik_app_export(app_identifier="MyApp", output_path="/backup/MyApp.qvf", format="qvf", include_data=true)
   ```

2. **App exporteren zonder data**:
   ```
   qlik_app_export(app_identifier="MyApp", output_path="/templates/MyApp_template.qvf", no_data=true)
   ```

3. **App exporteren naar JSON**:
   ```
   qlik_app_export(app_identifier="MyApp", output_path="/exports/MyApp.json", format="json")
   ```

#### App Import Workflow
1. **App importeren vanuit backup**:
   ```
   qlik_app_import(file_path="/backup/MyApp.qvf", app_name="MyApp_Restored", space_id="space-123")
   ```

2. **App importeren met conflict handling**:
   ```
   qlik_app_import(file_path="/templates/Template.qvf", app_name="NewApp", replace_existing=true)
   ```

#### App Copy Workflow
1. **App kopiëren naar andere space**:
   ```
   qlik_app_copy(source_app_id="app-123", target_name="MyApp_Copy", target_space_id="space-456", include_data=true)
   ```

2. **Template maken zonder data**:
   ```
   qlik_app_copy(source_app_id="app-123", target_name="MyApp_Template", include_data=false)
   ```

#### App Publish Workflow
1. **App publiceren naar managed space**:
   ```
   qlik_app_publish(app_id="app-123", target_space_id="managed-space-789", publish_name="Production App")
   ```

2. **Bestaande publicatie vervangen**:
   ```
   qlik_app_publish(app_id="app-123", target_space_id="managed-space-789", replace_existing=true)
   ```

### App Discovery Workflow
1. **Apps ontdekken**:
   ```
   qlik_app_list(limit=20, space_id="space-123")
   ```

2. **Apps zoeken**:
   ```
   qlik_app_search(query="sales", limit=10, owner="john.doe")
   ```

3. **App details bekijken**:
   ```
   qlik_app_get(app_identifier="MyApp")
   ```

4. **Spaces verkennen**:
   ```
   qlik_space_list(type_filter="shared")
   ```

### Context Management Workflow
1. **Context aanmaken**:
   ```
   qlik_context_create(name="prod", tenant_url="https://your-tenant.qlikcloud.com", api_key="your-api-key")
   ```

2. **Contexts bekijken**:
   ```
   qlik_context_list()
   ```

3. **Context activeren**:
   ```
   qlik_context_use(name="prod")
   ```

4. **Apps beheren** (gebruikt actieve context):
   ```
   qlik_app_build(app="MyApp", script="script.qvs")
   ```

### Beschikbare MCP Tools
MCP clients kunnen verbinding maken en de volgende tools gebruiken:

**App Lifecycle Management:**
- `qlik_app_export`: Voor het exporteren van apps naar lokale bestanden
- `qlik_app_import`: Voor het importeren van apps vanuit lokale bestanden
- `qlik_app_copy`: Voor het kopiëren van apps binnen dezelfde tenant
- `qlik_app_publish`: Voor het publiceren van apps naar managed spaces

**App Discovery:**
- `qlik_app_list`: Voor het ontdekken van beschikbare apps met filtering
- `qlik_app_get`: Voor gedetailleerde informatie over specifieke apps
- `qlik_app_search`: Voor het zoeken in apps op naam, beschrijving en tags
- `qlik_space_list`: Voor overzicht van beschikbare spaces

**App Management:**
- `qlik_app_build`: Voor het bouwen van Qlik applicaties
- `qlik_app_unbuild`: Voor het exporteren van Qlik applicaties

**Context Management:**
- `qlik_context_create`: Nieuwe authenticatie context aanmaken
- `qlik_context_list`: Beschikbare contexts tonen
- `qlik_context_use`: Context activeren
- `qlik_context_remove`: Context verwijderen

**Utilities:**
- `qlik_cli_version`: Voor versie informatie
- `qlik_validate_connection`: Voor connectie validatie

## Volgende Stappen
1. **Reload Management**: App reload triggering en monitoring
2. **Content Management**: Advanced space en collection management
3. **Connection Management**: Data connection beheer en validatie
4. **Testing**: Unit tests en integratie tests
5. **Documentatie**: Uitgebreide gebruikershandleiding
6. **Advanced Features**: App analysis tools, performance monitoring, en andere geavanceerde qlik-cli functionaliteiten
7. **Batch Operations**: Bulk export/import/copy operaties voor efficiency
8. **Scheduling**: Automated backup en sync workflows